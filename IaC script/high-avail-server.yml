Parameters:
    EnvironmentName: 
        Description: An environment name that will be prefixed to the resource name
        Type: String
    InstanceTypeParameter:
        Description: Enter the instance type
        Type: String
        Default: t2.medium
        AllowedValues: 
            - t2.medium
            - t2.large
            - t3.medium


Resources:            
    ServerSecurityGroup: 
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http access to private server
            VpcId:
                Fn::ImportValue:
                    !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                  CidrIp: 0.0.0.0/0
                - IpProtocol: tcp
                  FromPort: 22
                  ToPort: 22
                  CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
                - IpProtocol: tcp
                  FromPort: 0
                  ToPort: 65535
                  CidrIp: 0.0.0.0/0
    LoadBalancerSecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow http into load balancer
            VpcId: 
                Fn::ImportValue:
                    !Sub "${EnvironmentName}-VPCID"
            SecurityGroupIngress:
                - IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                  CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
                - IpProtocol: tcp
                  FromPort: 80
                  ToPort: 80
                  CidrIp: 0.0.0.0/0
    LaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
            UserData:
                Fn::Base64: !Sub |
                    #!/bin/bash
                    apt-get update -y
                    apt-get install unzip awscli -y
                    apt-get install apache2 -y                    
                    systemctl start apache2.service
                    cd /var/www/html
                    aws s3 cp s3://myudacityhighavail1994/udacity_udagram.zip .
                    unzip -o udacity_udagram.zip
                    systemctl restart apache2.service
            ImageId: ami-08fdec01f5df9998f
            IamInstanceProfile: !ImportValue ReadProfileInstance
            SecurityGroups:
                - !Ref ServerSecurityGroup
            InstanceType: !Ref InstanceTypeParameter
            BlockDeviceMappings:
                - DeviceName: "/dev/sdk"
                  Ebs:
                      VolumeSize: '10'
    WebAppAutoscalingGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            VPCZoneIdentifier:
                - Fn::ImportValue: 
                      !Sub "${EnvironmentName}-PRIV-NETS"
            LaunchConfigurationName: !Ref LaunchConfig
            MinSize: '4'
            MaxSize: '6'
            TargetGroupARNs:
                - !Ref WebAppTargetGroup  
    WebAppLoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Subnets:
                - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
                - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
            SecurityGroups:
                - !Ref LoadBalancerSecGroup
    AppListener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
          DefaultActions:
              - Type: forward
                TargetGroupArn: !Ref WebAppTargetGroup
          LoadBalancerArn: !Ref WebAppLoadBalancer
          Port: '80'
          Protocol: HTTP
    ALBListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
            Actions:
                - Type: forward
                  TargetGroupArn: !Ref WebAppTargetGroup
            Conditions:
                - Field: path-pattern
                  Values: [/]
            ListenerArn: !Ref AppListener
            Priority: 1
    WebAppTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            HealthCheckIntervalSeconds: 10
            HealthCheckPath: /
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 8
            HealthyThresholdCount: 2
            Port: 80
            Protocol: HTTP
            UnhealthyThresholdCount: 5
            VpcId: 
                Fn::ImportValue:
                    !Sub "${EnvironmentName}-VPCID" 

Outputs:
    LoadBalancer:
        Description: A reference to the created LoadBalancer public DNS name
        Value: !Join [ "", [ "http://", !GetAtt WebAppLoadBalancer.DNSName ]]
        Export:
            Name: LoadBalancerDNS



